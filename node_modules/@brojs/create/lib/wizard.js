import prompts from "prompts";
import yargs from "yargs";

import chalk from "chalk";

import { createmicrofrontend } from "./utils/create.js";

prompts.override(yargs.argv);

const onCancel = (messsage = "Отмена") =>
  console.log(chalk.redBright.bgBlack.bold(messsage));

export const promtsData = {
  prompt:
    // [
    //   {
    //     type: "select",
    //     name: "comand",
    //     message: "Что будем создавать?",
    //     choices: [
    //       { title: "frontend", value: "pl" },
    //       // { title: "backend (nope)", value: "bh" },
    //       { title: "Отмена", value: "cancel" },
    //     ],
    //   },
    // ],
    // on: {
    //   bh: () => onCancel("Пока не реализовано"),
    //   cancel: onCancel,
    // },
    // next: {
    //   pl: {
    //     prompt: 
    [
      {
        type: "select",
        name: "comand",
        message: "Что будем создавать?",
        choices: [
          { title: "microfrontend", value: "frontend-micro" },
          {
            title: "microfrontend advanced",
            value: "frontend-micro-adv",
          },
          // { title: "simple spa", value: "spa" },
          { title: "Отмена", value: "cancel" },
        ],
      },
    ],
  on: {
    spa: () => onCancel("Пока не реализовано"),
    cancel: onCancel,
    "frontend-micro": (comand) => createmicrofrontend({ type: comand }),
    "frontend-micro-adv": (comand) =>
      createmicrofrontend({ type: comand }),
  },
  // },
  // },
};

export const goPrompts = async (data) => {
  const { comand } = await prompts(data.prompt);
  console.log(comand);
  const ressult = data?.on[comand]?.(comand !== "cancel" ? comand : void 0);
  if (ressult && "then" in ressult) await ressult;
  data?.next?.[comand] && (await goPrompts(data.next[comand]));
};
